language: c

# Travis CI build matrix.
# Each entry below will trigger an extra, parallel build on Travis.
matrix:
  include:
    - env: linking=static arch=x64 configuration=Release
      os: linux
      dist: trusty
      addons:
        apt:
          update: true
          packages:
            - p7zip-full

    - env: linking=static arch=x86 configuration=Release
      os: linux
      dist: trusty
      addons:
        apt:
          update: true
          packages:
            - gcc-multilib
            - g++-multilib
            - p7zip-full

    - env: linking=static arch=x64 configuration=Release
      os: osx
      osx_image: xcode8

    - env: linking=static arch=x64 configuration=Debug
      os: linux
      dist: trusty
      addons:
        apt:
          update: true
          packages:
            - p7zip-full

    - env: linking=static arch=x86 configuration=Debug
      os: linux
      dist: trusty
      addons:
        apt:
          update: true
          packages:
            - gcc-multilib
            - g++-multilib
            - p7zip-full

    - env: linking=static arch=x64 configuration=Debug
      os: osx
      osx_image: xcode8

before_install:
  - if [[ "$TRAVIS_TAG" == "" ]] && [[ "$TRAVIS_COMMIT_MESSAGE" == *"[deploy]" ]]; then travis_terminate 0; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install p7zip; fi

  - if [[ "$TRAVIS_TAG" == "" ]]; then
      export BRANCH_NAME="$TRAVIS_BRANCH";
    else
      export BRANCH_NAME=$(echo "$TRAVIS_BRANCH" | rev | cut -d"-" -f2- | rev);
    fi

install:
  - git clone https://github.com/taglib/taglib taglib
  - cd ./taglib

  - export DIST="../${BRANCH_NAME}-${arch}"
  - export ARTIFACT_NAME="${BRANCH_NAME}-${TRAVIS_OS_NAME}-${arch}-${linking}"

  - if [[ "$configuration" == "Debug" ]]; then
      export ARTIFACT_NAME="${ARTIFACT_NAME}-debug";
    fi

script:
  # set variables related with compiler option for x86 architecture first
  - if [[ "${arch}" == "x86" ]]; then
      export CFLAGS=-m32;
      export CXXFLAGS=-m32;
      export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig;
    fi

  # build it
  - cmake -DCMAKE_INSTALL_PREFIX=${DIST} -DBUILD_SHARED_LIBS=OFF -DENABLE_STATIC_RUNTIME=ON -DCMAKE_BUILD_TYPE=${configuration} .
  - make
  - sudo make install

after_success:
  - cp ./meta.json ${DIST}
  - 7z a -ttar ${ARTIFACT_NAME}.tar ${DIST}
  - 7z a -tgzip ${ARTIFACT_NAME}.tar.gz ${ARTIFACT_NAME}.tar

deploy:
  provider: releases
  api_key:
    secure: oR0RMTlUR7XT8iBzoJG5InirUW5q4MxWKOV8Bp9kjV1/vALZlT2COhCEUsDl9HE56eTYt6g6aln4vMbHBzHcYMUPDOloL+YDyxhaURCCOpJJgVPG0YjfHj4vf6lXS7KgJkqmQrWJqtmZK2d/myzhxdFz5myn7WKlvV68hclhySwxJMAWs4vDT6LchW49yNeTfDOfywjUmwi3X4uWuM9SMGsICK5jM0YESE3ICCkFraR10+QxzpUeyIrmdWv3e1/GMjPPv+blgE1wZq1tOVtR3oQU0LU9dGwHcekjDnHt2Q71O9/zL0ILgIFJXEaBful6xgQB8qwyIVZZOSN7zdvsT+ORsTs9ncjk7YUi+pUTOQgcK7uXcxlfYld+LORVelsD1MIwKlep6eM/LcXZPK5W00A6wFDPuTsj54+obb5wVj71u1eOMwMzHLWaV4fzGhFmzVz8tm2qkRWdHZGs67Jsfqwh4uRhHhJLYOOTxmnthF2Od3HWjtc8+aLwUqp0iM/uppcCn52Oj7SIuY425Cg+KKXtMLwXBlwRyLKS7xtjQGKHq5MdU7gXjvZXYlvVJzWhMit+oOwCu8KX3o0sXGDD3YxrIj/SS3hiJz+uRecQ8I76a6bd2a2x5PQFWFgdso38M5GsEQe1t95ZDgniyY7X1RMwKHVhZJxPIfwJtfb4MKw=
  file: ./*.tar.gz
  file_glob: true
  skip_cleanup: true
  on:
    tags: true
